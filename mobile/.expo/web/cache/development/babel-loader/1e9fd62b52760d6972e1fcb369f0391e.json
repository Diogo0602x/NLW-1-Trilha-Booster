{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\diogo\\\\OneDrive\\\\Documentos\\\\Diogo_Programa\\xE7\\xE3o\\\\NLW-master\\\\mobile\\\\node_modules\\\\react-native-maps\\\\lib\\\\components\\\\MapUrlTile.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ViewPropTypes from \"react-native-web/dist/exports/ViewPropTypes\";\nimport View from \"react-native-web/dist/exports/View\";\nimport decorateMapComponent, { USES_DEFAULT_IMPLEMENTATION, SUPPORTED } from \"./decorateMapComponent\";\nvar viewPropTypes = ViewPropTypes || View.propTypes;\n\nvar propTypes = _objectSpread(_objectSpread({}, viewPropTypes), {}, {\n  urlTemplate: PropTypes.string.isRequired,\n  zIndex: PropTypes.number,\n  maximumZ: PropTypes.number,\n  minimumZ: PropTypes.number,\n  shouldReplaceMapContent: PropTypes.bool,\n  tileSize: PropTypes.number,\n  flipY: PropTypes.bool\n});\n\nvar MapUrlTile = function (_React$Component) {\n  _inherits(MapUrlTile, _React$Component);\n\n  var _super = _createSuper(MapUrlTile);\n\n  function MapUrlTile() {\n    _classCallCheck(this, MapUrlTile);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(MapUrlTile, [{\n    key: \"render\",\n    value: function render() {\n      var AIRMapUrlTile = this.getAirComponent();\n      return React.createElement(AIRMapUrlTile, _extends({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 12\n        }\n      }));\n    }\n  }]);\n\n  return MapUrlTile;\n}(React.Component);\n\nMapUrlTile.propTypes = propTypes;\nexport default decorateMapComponent(MapUrlTile, {\n  componentType: 'UrlTile',\n  providers: {\n    google: {\n      ios: SUPPORTED,\n      android: USES_DEFAULT_IMPLEMENTATION\n    }\n  }\n});","map":{"version":3,"sources":["C:/Users/diogo/OneDrive/Documentos/Diogo_Programação/NLW-master/mobile/node_modules/react-native-maps/lib/components/MapUrlTile.js"],"names":["PropTypes","React","decorateMapComponent","USES_DEFAULT_IMPLEMENTATION","SUPPORTED","viewPropTypes","ViewPropTypes","View","propTypes","urlTemplate","string","isRequired","zIndex","number","maximumZ","minimumZ","shouldReplaceMapContent","bool","tileSize","flipY","MapUrlTile","AIRMapUrlTile","getAirComponent","props","Component","componentType","providers","google","ios","android"],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAIA,OAAOC,oBAAP,IACEC,2BADF,EAEEC,SAFF;AAMA,IAAMC,aAAa,GAAGC,aAAa,IAAIC,IAAI,CAACC,SAA5C;;AAEA,IAAMA,SAAS,mCACVH,aADU;AAObI,EAAAA,WAAW,EAAET,SAAS,CAACU,MAAV,CAAiBC,UAPjB;AAgBbC,EAAAA,MAAM,EAAEZ,SAAS,CAACa,MAhBL;AAqBbC,EAAAA,QAAQ,EAAEd,SAAS,CAACa,MArBP;AA2BbE,EAAAA,QAAQ,EAAEf,SAAS,CAACa,MA3BP;AAkCbG,EAAAA,uBAAuB,EAAEhB,SAAS,CAACiB,IAlCtB;AAyCbC,EAAAA,QAAQ,EAAElB,SAAS,CAACa,MAzCP;AAiDbM,EAAAA,KAAK,EAAEnB,SAAS,CAACiB;AAjDJ,EAAf;;IAoDMG,U;;;;;;;;;;;;;WACJ,kBAAS;AACP,UAAMC,aAAa,GAAG,KAAKC,eAAL,EAAtB;AACA,aAAO,oBAAC,aAAD,eAAmB,KAAKC,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACD;;;;EAJsBtB,KAAK,CAACuB,S;;AAO/BJ,UAAU,CAACZ,SAAX,GAAuBA,SAAvB;AAEA,eAAeN,oBAAoB,CAACkB,UAAD,EAAa;AAC9CK,EAAAA,aAAa,EAAE,SAD+B;AAE9CC,EAAAA,SAAS,EAAE;AACTC,IAAAA,MAAM,EAAE;AACNC,MAAAA,GAAG,EAAExB,SADC;AAENyB,MAAAA,OAAO,EAAE1B;AAFH;AADC;AAFmC,CAAb,CAAnC","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport { ViewPropTypes, View } from 'react-native';\n\nimport decorateMapComponent, {\n  USES_DEFAULT_IMPLEMENTATION,\n  SUPPORTED,\n} from './decorateMapComponent';\n\n// if ViewPropTypes is not defined fall back to View.propType (to support RN < 0.44)\nconst viewPropTypes = ViewPropTypes || View.propTypes;\n\nconst propTypes = {\n  ...viewPropTypes,\n\n  /**\n   * The url template of the tile server. The patterns {x} {y} {z} will be replaced at runtime\n   * For example, http://c.tile.openstreetmap.org/{z}/{x}/{y}.png\n   */\n  urlTemplate: PropTypes.string.isRequired,\n\n  /**\n   * The order in which this tile overlay is drawn with respect to other overlays. An overlay\n   * with a larger z-index is drawn over overlays with smaller z-indices. The order of overlays\n   * with the same z-index is arbitrary. The default zIndex is -1.\n   *\n   * @platform android\n   */\n  zIndex: PropTypes.number,\n  /**\n   * The maximum zoom level for this tile overlay.\n   *\n   */\n  maximumZ: PropTypes.number,\n\n  /**\n   * The minimum zoom level for this tile overlay.\n   *\n   */\n  minimumZ: PropTypes.number,\n\n  /**\n   * Corresponds to MKTileOverlay canReplaceMapContent.\n   *\n   * @platform ios\n   */\n  shouldReplaceMapContent: PropTypes.bool,\n\n  /**\n   * (Optional) Tile size for iOS only, default size is 256 * 256.\n   *\n   * @platform ios\n   */\n  tileSize: PropTypes.number,\n\n  /**\n   *\n   * Allow tiles using the TMS coordinate system (origin bottom left)\n   * to be used, and displayed at their correct coordinates\n   *\n   */\n  flipY: PropTypes.bool,\n};\n\nclass MapUrlTile extends React.Component {\n  render() {\n    const AIRMapUrlTile = this.getAirComponent();\n    return <AIRMapUrlTile {...this.props} />;\n  }\n}\n\nMapUrlTile.propTypes = propTypes;\n\nexport default decorateMapComponent(MapUrlTile, {\n  componentType: 'UrlTile',\n  providers: {\n    google: {\n      ios: SUPPORTED,\n      android: USES_DEFAULT_IMPLEMENTATION,\n    },\n  },\n});\n"]},"metadata":{},"sourceType":"module"}