{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport ExpoMailComposer from \"./ExpoMailComposer\";\nexport function composeAsync(options) {\n  return _regeneratorRuntime.async(function composeAsync$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(ExpoMailComposer.composeAsync(options));\n\n        case 2:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function isAvailableAsync() {\n  return _regeneratorRuntime.async(function isAvailableAsync$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(ExpoMailComposer.isAvailableAsync());\n\n        case 2:\n          return _context2.abrupt(\"return\", _context2.sent);\n\n        case 3:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport * from \"./MailComposer.types\";","map":{"version":3,"sources":["../src/MailComposer.ts"],"names":[],"mappings":";AAAA,OAAO,gBAAP;AAGA,OAAO,SAAe,YAAf,CAA4B,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACQ,gBAAgB,CAAC,YAAjB,CAA8B,OAA9B,CADR;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUP,OAAO,SAAe,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACQ,gBAAgB,CAAC,gBAAjB,EADR;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIP","sourcesContent":["import ExpoMailComposer from './ExpoMailComposer';\nimport { MailComposerOptions, MailComposerResult } from './MailComposer.types';\n\nexport async function composeAsync(options: MailComposerOptions): Promise<MailComposerResult> {\n  return await ExpoMailComposer.composeAsync(options);\n}\n\n/**\n * Can the device compose an email.\n * - Returns `true` on iOS when the device has a default email setup for sending mail.\n * - Can return `false` on iOS if an MDM profile is setup to block outgoing mail. If this is the case, you may want to use the Linking API instead.\n * - Always returns `true` in the browser and on Android\n */\nexport async function isAvailableAsync(): Promise<boolean> {\n  return await ExpoMailComposer.isAvailableAsync();\n}\n\nexport * from './MailComposer.types';\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}