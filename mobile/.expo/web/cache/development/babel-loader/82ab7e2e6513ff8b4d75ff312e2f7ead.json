{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\diogo\\\\OneDrive\\\\Documentos\\\\Diogo_Programa\\xE7\\xE3o\\\\NLW-master\\\\mobile\\\\node_modules\\\\react-native-maps\\\\lib\\\\components\\\\MapOverlay.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport decorateMapComponent, { SUPPORTED, USES_DEFAULT_IMPLEMENTATION } from \"./decorateMapComponent\";\nvar viewConfig = {\n  uiViewClassName: 'AIR<provider>MapOverlay',\n  validAttributes: {\n    image: true\n  }\n};\n\nvar propTypes = _objectSpread(_objectSpread({}, View.propTypes), {}, {\n  image: PropTypes.any.isRequired,\n  bounds: PropTypes.arrayOf(PropTypes.array.isRequired).isRequired,\n  tappable: PropTypes.bool,\n  onPress: PropTypes.func\n});\n\nvar MapOverlay = function (_Component) {\n  _inherits(MapOverlay, _Component);\n\n  var _super = _createSuper(MapOverlay);\n\n  function MapOverlay() {\n    _classCallCheck(this, MapOverlay);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(MapOverlay, [{\n    key: \"render\",\n    value: function render() {\n      var image;\n\n      if (this.props.image) {\n        if (typeof this.props.image.startsWith === 'function' && this.props.image.startsWith('http')) {\n          image = this.props.image;\n        } else {\n          image = Image.resolveAssetSource(this.props.image) || {};\n          image = image.uri;\n        }\n      }\n\n      var AIRMapOverlay = this.getAirComponent();\n      return React.createElement(AIRMapOverlay, _extends({}, this.props, {\n        image: image,\n        style: [styles.overlay, this.props.style],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 7\n        }\n      }));\n    }\n  }]);\n\n  return MapOverlay;\n}(Component);\n\nMapOverlay.propTypes = propTypes;\nMapOverlay.viewConfig = viewConfig;\nvar styles = StyleSheet.create({\n  overlay: {\n    position: 'absolute',\n    backgroundColor: 'transparent'\n  }\n});\nMapOverlay.Animated = Animated.createAnimatedComponent(MapOverlay);\nexport default decorateMapComponent(MapOverlay, {\n  componentType: 'Overlay',\n  providers: {\n    google: {\n      ios: SUPPORTED,\n      android: USES_DEFAULT_IMPLEMENTATION\n    }\n  }\n});","map":{"version":3,"sources":["C:/Users/diogo/OneDrive/Documentos/Diogo_Programação/NLW-master/mobile/node_modules/react-native-maps/lib/components/MapOverlay.js"],"names":["React","Component","PropTypes","decorateMapComponent","SUPPORTED","USES_DEFAULT_IMPLEMENTATION","viewConfig","uiViewClassName","validAttributes","image","propTypes","View","any","isRequired","bounds","arrayOf","array","tappable","bool","onPress","func","MapOverlay","props","startsWith","Image","resolveAssetSource","uri","AIRMapOverlay","getAirComponent","styles","overlay","style","StyleSheet","create","position","backgroundColor","Animated","createAnimatedComponent","componentType","providers","google","ios","android"],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;;;AAGA,OAAOC,oBAAP,IACEC,SADF,EAEEC,2BAFF;AAKA,IAAMC,UAAU,GAAG;AACjBC,EAAAA,eAAe,EAAE,yBADA;AAEjBC,EAAAA,eAAe,EAAE;AACfC,IAAAA,KAAK,EAAE;AADQ;AAFA,CAAnB;;AAOA,IAAMC,SAAS,mCACVC,IAAI,CAACD,SADK;AAGbD,EAAAA,KAAK,EAAEP,SAAS,CAACU,GAAV,CAAcC,UAHR;AAKbC,EAAAA,MAAM,EAAEZ,SAAS,CAACa,OAAV,CAAkBb,SAAS,CAACc,KAAV,CAAgBH,UAAlC,EAA8CA,UALzC;AASbI,EAAAA,QAAQ,EAAEf,SAAS,CAACgB,IATP;AAWbC,EAAAA,OAAO,EAAEjB,SAAS,CAACkB;AAXN,EAAf;;IAcMC,U;;;;;;;;;;;;;WACJ,kBAAS;AACP,UAAIZ,KAAJ;;AACA,UAAI,KAAKa,KAAL,CAAWb,KAAf,EAAsB;AACpB,YACE,OAAO,KAAKa,KAAL,CAAWb,KAAX,CAAiBc,UAAxB,KAAuC,UAAvC,IACA,KAAKD,KAAL,CAAWb,KAAX,CAAiBc,UAAjB,CAA4B,MAA5B,CAFF,EAGE;AACAd,UAAAA,KAAK,GAAG,KAAKa,KAAL,CAAWb,KAAnB;AACD,SALD,MAKO;AACLA,UAAAA,KAAK,GAAGe,KAAK,CAACC,kBAAN,CAAyB,KAAKH,KAAL,CAAWb,KAApC,KAA8C,EAAtD;AACAA,UAAAA,KAAK,GAAGA,KAAK,CAACiB,GAAd;AACD;AACF;;AAED,UAAMC,aAAa,GAAG,KAAKC,eAAL,EAAtB;AAEA,aACE,oBAAC,aAAD,eACM,KAAKN,KADX;AAEE,QAAA,KAAK,EAAEb,KAFT;AAGE,QAAA,KAAK,EAAE,CAACoB,MAAM,CAACC,OAAR,EAAiB,KAAKR,KAAL,CAAWS,KAA5B,CAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF;AAOD;;;;EAxBsB9B,S;;AA2BzBoB,UAAU,CAACX,SAAX,GAAuBA,SAAvB;AACAW,UAAU,CAACf,UAAX,GAAwBA,UAAxB;AAEA,IAAMuB,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAC/BH,EAAAA,OAAO,EAAE;AACPI,IAAAA,QAAQ,EAAE,UADH;AAEPC,IAAAA,eAAe,EAAE;AAFV;AADsB,CAAlB,CAAf;AAOAd,UAAU,CAACe,QAAX,GAAsBA,QAAQ,CAACC,uBAAT,CAAiChB,UAAjC,CAAtB;AAEA,eAAelB,oBAAoB,CAACkB,UAAD,EAAa;AAC9CiB,EAAAA,aAAa,EAAE,SAD+B;AAE9CC,EAAAA,SAAS,EAAE;AACTC,IAAAA,MAAM,EAAE;AACNC,MAAAA,GAAG,EAAErC,SADC;AAENsC,MAAAA,OAAO,EAAErC;AAFH;AADC;AAFmC,CAAb,CAAnC","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { View, StyleSheet, Image, Animated } from 'react-native';\n\nimport decorateMapComponent, {\n  SUPPORTED,\n  USES_DEFAULT_IMPLEMENTATION,\n} from './decorateMapComponent';\n\nconst viewConfig = {\n  uiViewClassName: 'AIR<provider>MapOverlay',\n  validAttributes: {\n    image: true,\n  },\n};\n\nconst propTypes = {\n  ...View.propTypes,\n  // A custom image to be used as overlay.\n  image: PropTypes.any.isRequired,\n  // Top left and bottom right coordinates for the overlay\n  bounds: PropTypes.arrayOf(PropTypes.array.isRequired).isRequired,\n  /* Boolean to allow an overlay to be tappable and use the\n   * onPress function\n   */\n  tappable: PropTypes.bool,\n  // Callback that is called when the user presses on the overlay\n  onPress: PropTypes.func,\n};\n\nclass MapOverlay extends Component {\n  render() {\n    let image;\n    if (this.props.image) {\n      if (\n        typeof this.props.image.startsWith === 'function' &&\n        this.props.image.startsWith('http')\n      ) {\n        image = this.props.image;\n      } else {\n        image = Image.resolveAssetSource(this.props.image) || {};\n        image = image.uri;\n      }\n    }\n\n    const AIRMapOverlay = this.getAirComponent();\n\n    return (\n      <AIRMapOverlay\n        {...this.props}\n        image={image}\n        style={[styles.overlay, this.props.style]}\n      />\n    );\n  }\n}\n\nMapOverlay.propTypes = propTypes;\nMapOverlay.viewConfig = viewConfig;\n\nconst styles = StyleSheet.create({\n  overlay: {\n    position: 'absolute',\n    backgroundColor: 'transparent',\n  },\n});\n\nMapOverlay.Animated = Animated.createAnimatedComponent(MapOverlay);\n\nexport default decorateMapComponent(MapOverlay, {\n  componentType: 'Overlay',\n  providers: {\n    google: {\n      ios: SUPPORTED,\n      android: USES_DEFAULT_IMPLEMENTATION,\n    },\n  },\n});\n"]},"metadata":{},"sourceType":"module"}