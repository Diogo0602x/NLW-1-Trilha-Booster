{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\nexport default {\n  get name() {\n    return 'ExponentUpdates';\n  },\n\n  reload: function reload() {\n    return _regeneratorRuntime.async(function reload$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (canUseDOM) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 2:\n            window.location.reload(true);\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  reloadFromCache: function reloadFromCache() {\n    return _regeneratorRuntime.async(function reloadFromCache$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (canUseDOM) {\n              _context2.next = 2;\n              break;\n            }\n\n            return _context2.abrupt(\"return\");\n\n          case 2:\n            window.location.reload(false);\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n};","map":{"version":3,"sources":["../../src/Updates/ExponentUpdates.web.ts"],"names":[],"mappings":";AAAA,SAAS,SAAT,QAA0B,+BAA1B;AAEA,eAAe;AACb,MAAI,IAAJ,GAAQ;AACN,WAAO,iBAAP;AACD,GAHY;;AAIP,EAAA,MAJO;AAAA;AAAA;AAAA;AAAA;AAAA,gBAKN,SALM;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAOX,YAAA,MAAM,CAAC,QAAP,CAAgB,MAAhB,CAAuB,IAAvB;;AAPW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASP,EAAA,eATO;AAAA;AAAA;AAAA;AAAA;AAAA,gBAUN,SAVM;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAYX,YAAA,MAAM,CAAC,QAAP,CAAgB,MAAhB,CAAuB,KAAvB;;AAZW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAf","sourcesContent":["import { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\n\nexport default {\n  get name(): string {\n    return 'ExponentUpdates';\n  },\n  async reload(): Promise<void> {\n    if (!canUseDOM) return;\n\n    window.location.reload(true);\n  },\n  async reloadFromCache(): Promise<void> {\n    if (!canUseDOM) return;\n\n    window.location.reload(false);\n  },\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}